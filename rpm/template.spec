%bcond_without tests
%bcond_without weak_deps

%global __os_install_post %(echo '%{__os_install_post}' | sed -e 's!/usr/lib[^[:space:]]*/brp-python-bytecompile[[:space:]].*$!!g')
%global __provides_exclude_from ^/opt/ros/eloquent/.*$
%global __requires_exclude_from ^/opt/ros/eloquent/.*$

Name:           ros-eloquent-rviz2
Version:        7.0.5
Release:        1%{?dist}%{?release_suffix}
Summary:        ROS rviz2 package

License:        BSD
URL:            https://github.com/ros2/rviz/blob/ros2/README.md
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-eloquent-rviz-common
Requires:       ros-eloquent-rviz-default-plugins
Requires:       ros-eloquent-rviz-ogre-vendor
Requires:       ros-eloquent-ros-workspace
BuildRequires:  qt5-qtbase-devel
BuildRequires:  ros-eloquent-ament-cmake
BuildRequires:  ros-eloquent-ament-cmake-cppcheck
BuildRequires:  ros-eloquent-ament-cmake-cpplint
BuildRequires:  ros-eloquent-ament-cmake-lint-cmake
BuildRequires:  ros-eloquent-ament-cmake-uncrustify
BuildRequires:  ros-eloquent-geometry-msgs
BuildRequires:  ros-eloquent-rclcpp
BuildRequires:  ros-eloquent-rviz-common
BuildRequires:  ros-eloquent-rviz-ogre-vendor
BuildRequires:  ros-eloquent-sensor-msgs
BuildRequires:  ros-eloquent-ros-workspace
Provides:       %{name}-devel = %{version}-%{release}
Provides:       %{name}-doc = %{version}-%{release}
Provides:       %{name}-runtime = %{version}-%{release}

%description
3D visualization tool for ROS.

%prep
%autosetup

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/eloquent/setup.sh" ]; then . "/opt/ros/eloquent/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake3 \
    -UINCLUDE_INSTALL_DIR \
    -ULIB_INSTALL_DIR \
    -USYSCONF_INSTALL_DIR \
    -USHARE_INSTALL_PREFIX \
    -ULIB_SUFFIX \
    -DCMAKE_INSTALL_LIBDIR="lib" \
    -DCMAKE_INSTALL_PREFIX="/opt/ros/eloquent" \
    -DCMAKE_PREFIX_PATH="/opt/ros/eloquent" \
    -DSETUPTOOLS_DEB_LAYOUT=OFF \
    ..

%make_build

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/eloquent/setup.sh" ]; then . "/opt/ros/eloquent/setup.sh"; fi
%make_install -C obj-%{_target_platform}

%if 0%{?with_tests}
%check
# Look for a Makefile target with a name indicating that it runs tests
TEST_TARGET=$(%__make -qp -C obj-%{_target_platform} | sed "s/^\(test\|check\):.*/\\1/;t f;d;:f;q0")
if [ -n "$TEST_TARGET" ]; then
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree and source it.  It will set things like
# CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/eloquent/setup.sh" ]; then . "/opt/ros/eloquent/setup.sh"; fi
%make_build -C obj-%{_target_platform} $TEST_TARGET || echo "RPM TESTS FAILED"
else echo "RPM TESTS SKIPPED"; fi
%endif

%files
/opt/ros/eloquent

%changelog
* Fri Sep 18 2020 Scott K Logan <scott@openrobotics.org> - 7.0.5-1
- Autogenerated by Bloom

